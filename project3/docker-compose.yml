services:
  db:
    #Container name
    container_name: db 

    #Build context 
    build:
      context: ./db
      dockerfile: Dockerfile

    #Set restart to always
    restart: always

    # Share container db-pgadmin with pgadmin
    networks:
      - postgre-pgadmin
      - postgre-app


    environment:
      # Creating a database user on first run
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      # password for access with the user postgres
      - POSTGRESQL_POSTGRES_PASSWORD=${POSTGRESQL_POSTGRES_PASSWORD}
      
    #Mount volume postgresql-data to directory at the /bitnami/postgresql path
    volumes:
      - postgresql-data:/bitnami/postgresql
      - ./db/init_scripts:/docker-entrypoint-initdb.d
    
      

  db-pgadmin:
    #Container name
    container_name: db-pgadmin 

    #Build image
    image: dpage/pgadmin4

    #Set restart to always
    restart: always

    #Depend on service db
    depends_on:
      - db

    #Share container network db-pgadmin with db
    networks:
      - postgre-pgadmin

    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}

    #Forward port 8888 from localhost to port 80 in container
    ports:
      - "8888:80"
    
    #Mount volume pgadmin-data to directory at the /var/lib/pgadmin path
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  app:
     #Container name
    container_name: app

    #Build context 
    build:
      context: ./app
      dockerfile: Dockerfile

    environment:
      # Connecting to db postgresql server
      - POSTGRESQL_USERNAME=${POSTGRE_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRE_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRE_DATABASE}
      - POSTGRESQL_PORT=${POSTGRE_PORT}
      - POSTGRESQL_HOST=${POSTGRE_HOST}

    #Set restart to always
    restart: always

    # Share container postgre-app with db
    networks:
      - postgre-app
      
    #Mount volume
    volumes:
      - ./app:/app:bind

  

networks:
  postgre-pgadmin:
    driver: bridge
  postgre-app:
    driver: bridge

volumes:
  pgadmin-data:
    driver: local
  postgresql-data:
    driver: local
  app-data:
 
    